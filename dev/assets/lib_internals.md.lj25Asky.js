import{_ as l,C as n,c as r,o as c,j as t,a as i,G as s,aA as o}from"./chunks/framework.DWrS7bjG.js";const F=JSON.parse('{"title":"Package Internals","description":"","frontmatter":{},"headers":[],"relativePath":"lib/internals.md","filePath":"lib/internals.md","lastUpdated":null}'),p={name:"lib/internals.md"},d={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""};function b(m,e,T,k,_,y){const a=n("Badge");return c(),r("div",null,[e[17]||(e[17]=t("h1",{id:"Package-Internals",tabindex:"-1"},[i("Package Internals "),t("a",{class:"header-anchor",href:"#Package-Internals","aria-label":'Permalink to "Package Internals {#Package-Internals}"'},"​")],-1)),e[18]||(e[18]=t("h2",{id:"TigerFetch-Module",tabindex:"-1"},[t("code",null,"TigerFetch"),i(" Module "),t("a",{class:"header-anchor",href:"#TigerFetch-Module","aria-label":'Permalink to "`TigerFetch` Module {#TigerFetch-Module}"'},"​")],-1)),t("details",d,[t("summary",null,[e[0]||(e[0]=t("a",{id:"TigerFetch.artifact_dir-Tuple{}",href:"#TigerFetch.artifact_dir-Tuple{}"},[t("span",{class:"jlbinding"},"TigerFetch.artifact_dir")],-1)),e[1]||(e[1]=i()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[2]||(e[2]=t("p",null,"Get the directory containing the artifact files.",-1)),e[3]||(e[3]=t("p",null,[t("a",{href:"https://github.com/eloualiche/TigerFetch.jl/blob/d72848a3cf0ae7bf19bfe7ee16d22ba1ace3dad5/src/artifacts.jl#L39-L41",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",g,[t("summary",null,[e[4]||(e[4]=t("a",{id:"TigerFetch.comonicon_install-Tuple{}",href:"#TigerFetch.comonicon_install-Tuple{}"},[t("span",{class:"jlbinding"},"TigerFetch.comonicon_install")],-1)),e[5]||(e[5]=i()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[6]||(e[6]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comonicon_install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Install the CLI manually. This will use the default configuration in <code>Comonicon.toml</code>, if it exists. For more detailed reference, please refer to <a href="https://comonicon.org" target="_blank" rel="noreferrer">Comonicon documentation</a>.</p><p><a href="https://github.com/comonicon/Comonicon.jl/blob/v1.0.8/src/frontend/cast.jl#L488-L494" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",h,[t("summary",null,[e[7]||(e[7]=t("a",{id:"TigerFetch.comonicon_install_path-Tuple{}",href:"#TigerFetch.comonicon_install_path-Tuple{}"},[t("span",{class:"jlbinding"},"TigerFetch.comonicon_install_path")],-1)),e[8]||(e[8]=i()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[9]||(e[9]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comonicon_install_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;[yes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Install the <code>PATH</code> and <code>FPATH</code> to your shell configuration file. You can use <code>comonicon_install_path(;yes=true)</code> to skip interactive prompt. For more detailed reference, please refer to <a href="https://comonicon.org" target="_blank" rel="noreferrer">Comonicon documentation</a>.</p><p><a href="https://github.com/comonicon/Comonicon.jl/blob/v1.0.8/src/frontend/cast.jl#L497-L504" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",u,[t("summary",null,[e[10]||(e[10]=t("a",{id:"TigerFetch.get_reference_data-Tuple{}",href:"#TigerFetch.get_reference_data-Tuple{}"},[t("span",{class:"jlbinding"},"TigerFetch.get_reference_data")],-1)),e[11]||(e[11]=i()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[12]||(e[12]=t("p",null,"Get paths to specific reference files.",-1)),e[13]||(e[13]=t("p",null,[t("a",{href:"https://github.com/eloualiche/TigerFetch.jl/blob/d72848a3cf0ae7bf19bfe7ee16d22ba1ace3dad5/src/artifacts.jl#L58-L60",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",f,[t("summary",null,[e[14]||(e[14]=t("a",{id:"TigerFetch.tigerfetch",href:"#TigerFetch.tigerfetch"},[t("span",{class:"jlbinding"},"TigerFetch.tigerfetch")],-1)),e[15]||(e[15]=i()),s(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[16]||(e[16]=o('<p>tigerfetch(type, year)</p><p>Download shapefiles for US geography from the Census Tiger ftp server.</p><p><strong>Intro</strong></p><p><strong>Args</strong></p><ul><li><p><code>type</code>: Geography type (state, county, cousub, tract)</p></li><li><p><code>year</code>: Data year (default: 2024)</p></li></ul><p><strong>Options</strong></p><ul><li><p><code>--state</code>: State identifier (name, abbreviation, or FIPS)</p></li><li><p><code>--county</code>: County identifier (name or FIPS, requires –state)</p></li><li><p><code>--output</code>: Output directory (default: current directory)</p></li><li><p><code>--force</code>: Override existing files</p></li></ul><p><strong>Examples</strong></p><p>tigerfetch state tigerfetch cousub –state IL tigerfetch areawater –state &quot;Minnesota&quot; # 10,000 lakes</p><p><a href="https://github.com/eloualiche/TigerFetch.jl/blob/d72848a3cf0ae7bf19bfe7ee16d22ba1ace3dad5/src/cli.jl#L4-L29" target="_blank" rel="noreferrer">source</a></p>',10))])])}const C=l(p,[["render",b]]);export{F as __pageData,C as default};
